Installation
============

To install WebRocket you need the following tools and dependecies:

Latest Go compiler
------------------
WebRocket is written in Go language. If you don't have Go compiler
installed yet, follow this installation guide: http://golang.org/doc/install.html

IMPORTANT: WebRocket have to be built against the last weekly release!

So far, WebRocket is using a bunch of unreleased features and want to catch 
up with Go's development, that's why you should remember to clone a *head
version* or the latest *weakly release*:

To get and build a head version of the compiler use following command:

	$ hg clone https://go.googlecode.com/hg/ go
	$ cd go
	$ ./all.bash

If you have any other doubts or problems, please follow the instructions from
the Go's documentation.

Dependencies
------------
WebRocket depends on few external libraries which have to be installed
in your system before you build it.

zeromq (>= 2.1 and < 3.0)
~~~~~~~~~~~~~~~~~~~~~~~~~
The ZeroMQ core library. This library should be available in you package
manager's repository in most of operating systems.

.Debian
	$ apt-get install libzmq-dev

.Arch Linux
	$ pacman -S zeromq

.On OS X
	$ brew install zeromq

If the 'zeromq' package is not available in your package manager,
try to build it manualy following the installation instructions at
http://www.zeromq.org/intro:get-the-software

Development dependencies
------------------------
If you want to work on WebRocket development, you need to install
few additional dependencies.

asciidoc
~~~~~~~~
Documentation and man pages generator.		

TIP: If you're an OSX user, in order to make the 'asciidoc' work
properly you have to register the installed docbook.

	$ brew install docbook asciidoc
	$ sudo docbook-register

On any other Linux/Unix distribution it's enough to just install deps
with your favorite package manager:

.Debian
	$ apt-get install docbook asciidoc

.Arch Linux
	$ pacman -S asciidoc

Building WebRocket
------------------
Once you have the Go compiler and all dependencies installed, we can move
to building our WebRocket installation. Building WebRocket is very easy and
shouldn't cause too many problems. After you will clone the repository, just
use standard 'make' targets to build and install:

	$ git clone git://github.com/nu7hatch/webrocket.git
	$ cd webrocket
	$ git submodule init && git submodule update
	$ gomake
	$ gomake check # it's a good idea to run tests

Documentation and Manual pages
------------------------------
If you work on the documentation or want to simply generate man pages
and other docs, use the following 'make' targets

	$ make man
	
...generates man pages and its html versions in the 'docs/' directory.

	$ make papers

...generates html versions of all other documents (README, INSTALL, etc.).

Troubleshooting
---------------
You may encounter a situation when WebRocket fails to build due to using
a stale version of the Go compiler and fails again due to compiler version
mismatch after you update it to the latest version. In this case you should
cleanup project workspace by running the 'clean' target:

	$ make clean

Usage
-----
Now all WebRocket tools should be available in your system. Check
the manual entries for each of them to get information about how do
they work. List of available manual entries:

* link:docs/webrocket-server.1.html[*webrocket-server*(1)]
* link:docs/webrocket-ctl.1.html[*webrocket-ctl*(1)]
* link:docs/webrocket-monitor.1.html[*webrocket-monitor*(1)]
